####################################################################
# VSTS Build Configuration, Version 1.2
#
# (c)2018 superdev GmbH
####################################################################

name: 4.0.$(date:yy)$(DayOfYear).$(rev:rr)
  
queue:
  name: Hosted VS2017
  demands: 
  - msbuild
  - visualstudio
  - vstest

trigger:
- master
- develop
- release/*

variables:
  solution: 'CrossPlatformLibrary.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  buildVersionPostfix: '-pre'
  nuspecFile: 'CrossPlatformLibrary.nuspec'
  nuspecFileForms: 'CrossPlatformLibrary.Forms.nuspec'

steps:
- task: bleddynrichards.Assembly-Info-Task.Assembly-Info-Task.Assembly-Info-Task@1
  displayName: 'Set Assembly Manifest Data'
  inputs:
    FileNames: |
     AssemblyInfo.cs
     CrossPlatformLibrary.csproj
    InsertAttributes: true
    Title: 'CrossPlatformLibrary'
    Description: 'An extensible cross-platform toolkit which provides a basic set of functionality used in most mobile apps.'
    Company: 'superdev GmbH'
    Copyright: '(c) $(date:yyyy) superdev GmbH'
    VersionNumber: '$(Build.BuildNumber)'
    FileVersionNumber: '$(Build.BuildNumber)'

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'


- powershell: |
   Write-Host "##vso[task.setvariable variable=PackageVersion]$(Build.BuildNumber)"
   Write-Host "##vso[task.setvariable variable=PackageVersionPre]$(Build.BuildNumber)$(BuildVersionPostfix)"
  displayName: 'Set PackageVersion'

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '$(solution)'
    msbuildArgs: ''
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run UnitTests'
  continueOnError: false
  inputs:
    command: test
    projects: '**/*.Tests.csproj'
    nobuild: true
    arguments: --filter "Category!=SystemTest"
    

- task: NuGetCommand@2
  displayName: 'Pack NuGet $(nuspecFile) PreRelease'
  inputs:
    command: custom
    arguments: pack $(nuspecFile) -Version $(PackageVersionPre) -NoPackageAnalysis -outputdirectory $(Build.ArtifactStagingDirectory)\artifacts

- task: NuGetCommand@2
  displayName: 'Pack NuGet $(nuspecFile)'
  inputs:
    command: custom
    arguments: pack $(nuspecFile) -Version $(PackageVersion) -NoPackageAnalysis -outputdirectory $(Build.ArtifactStagingDirectory)\artifacts


- task: NuGetCommand@2
  displayName: 'Pack NuGet $(nuspecFileForms) PreRelease'
  inputs:
    command: custom
    arguments: pack $(nuspecFileForms) -Version $(PackageVersionPre) -NoPackageAnalysis -outputdirectory $(Build.ArtifactStagingDirectory)\artifacts

- task: NuGetCommand@2
  displayName: 'Pack NuGet $(nuspecFileForms)'
  inputs:
    command: custom
    arguments: pack $(nuspecFileForms) -Version $(PackageVersion) -NoPackageAnalysis -outputdirectory $(Build.ArtifactStagingDirectory)\artifacts


- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'

    Contents: |
     **\bin\$(buildConfiguration)\**
     **\bin\*.nupkg

    TargetFolder: '$(Build.ArtifactStagingDirectory)'


- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

