<?xml version="1.0" encoding="UTF-8" ?>
<ResourceDictionary
    x:Class="CrossPlatformLibrary.Forms.MyResourceDictionary"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:CrossPlatformLibrary.Forms.Controls;assembly=CrossPlatformLibrary.Forms"
    xmlns:converters="clr-namespace:CrossPlatformLibrary.Forms.Converters;assembly=CrossPlatformLibrary.Forms"
    xmlns:effects="clr-namespace:CrossPlatformLibrary.Forms.Effects;assembly=CrossPlatformLibrary.Forms">

    <!--  Colors  -->
    <OnPlatform x:Key="WindowBackgroundTable" x:TypeArguments="Color">
        <On Platform="Android" Value="#F5F5F5" />
        <On Platform="iOS" Value="#EFEFF4" />
    </OnPlatform>
    <OnPlatform x:Key="WindowBackground" x:TypeArguments="Color">
        <On Platform="Android" Value="#F5F5F5" />
        <On Platform="iOS" Value="White" />
    </OnPlatform>

    <Color x:Key="ListSeparator">#C8C7CC</Color>

    <OnPlatform x:Key="Theme.DividerLine.Small" x:TypeArguments="x:Double">
        <On Platform="Android" Value="0.1" />
        <On Platform="iOS" Value="0.5" />
    </OnPlatform>

    <OnPlatform x:Key="Theme.DividerLine.Medium" x:TypeArguments="x:Double">
        <On Platform="Android" Value="1" />
        <On Platform="iOS" Value="1" />
    </OnPlatform>

    <OnPlatform x:Key="CardPadding" x:TypeArguments="Thickness">
        <On Platform="Android" Value="8, 8, 8, 16" />
        <On Platform="iOS" Value="0, 0, 0, 16" />
    </OnPlatform>
    <OnPlatform x:Key="CardSpacing" x:TypeArguments="x:Double">
        <On Platform="Android" Value="16" />
        <On Platform="iOS" Value="0" />
    </OnPlatform>

    <OnPlatform
        x:Key="CustomListItemTextStyleSize"
        x:TypeArguments="x:Double"
        Android="16"
        WinPhone="13"
        iOS="16" />
    <OnPlatform
        x:Key="CustomListItemDetailTextStyleSize"
        x:TypeArguments="x:Double"
        Android="13"
        WinPhone="13"
        iOS="13" />

    <!--  Converters  -->
    <converters:DebugConverter x:Key="DebugConverter" />
    <converters:IsNotEmptyConverter x:Key="IsNotEmptyConverter" />
    <converters:BoolInverter x:Key="BoolInverter" />
    <converters:FirstErrorConverter x:Key="FirstErrorConverter" />
    <converters:NullableDateTimeToFormatConverter x:Key="NullableDateTimeToFormatConverter" />
    <converters:PropertyErrorsToColorConverter x:Key="PropertyErrorsToColorConverter" />
    <converters:ValidationErrorsToStringConverter x:Key="ValidationErrorsToStringConverter" />

    <!--  Styles  -->
    <x:Double x:Key="MinimumHeight.Input">48</x:Double>

    <!--  Button Style  -->
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="TextColor" Value="{DynamicResource CustomButtonStyle.TextColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource CustomButtonStyle.BackgroundColor.Enabled}" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Button}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Button}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Button}" />
    </Style>
    <Style BasedOn="{StaticResource ButtonStyle}" TargetType="Button" />

    <Style x:Key="ImageButtonStyle" TargetType="ImageButton">
        <Setter Property="BackgroundColor" Value="{DynamicResource CustomButtonStyle.BackgroundColor.Enabled}" />
    </Style>
    <Style BasedOn="{StaticResource ImageButtonStyle}" TargetType="ImageButton" />

    <!--  CustomButton Base Style  -->
    <Style
        x:Key="CustomButtonStyle"
        TargetType="controls:CustomButton"
        BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="BackgroundColorPressed" Value="{DynamicResource CustomButtonStyle.BackgroundColor.Pressed}" />
        <Setter Property="BorderColor" Value="{DynamicResource CustomButtonStyle.BorderColor.Enabled}" />
        <Setter Property="BorderColorPressed" Value="{DynamicResource CustomButtonStyle.BorderColor.Pressed}" />
        <Setter Property="BorderWidth" Value="2" />
        <Setter Property="CornerRadius" Value="20" />
    </Style>

    <Style BasedOn="{StaticResource CustomButtonStyle}" TargetType="controls:CustomButton" />

    <!--  CustomButton Primary Style  -->
    <Style
        x:Key="CustomButtonPrimaryStyle"
        BasedOn="{StaticResource CustomButtonStyle}"
        TargetType="controls:CustomButton">
        <Setter Property="TextColor" Value="{DynamicResource CustomButtonPrimaryStyle.TextColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource CustomButtonPrimaryStyle.BackgroundColor.Enabled}" />
        <Setter Property="BackgroundColorPressed" Value="{DynamicResource CustomButtonPrimaryStyle.BackgroundColor.Pressed}" />
        <Setter Property="BorderColor" Value="{DynamicResource CustomButtonPrimaryStyle.BorderColor.Enabled}" />
        <Setter Property="BorderColorPressed" Value="{DynamicResource CustomButtonPrimaryStyle.BorderColor.Pressed}" />
        <Style.Triggers>
            <!--  IsEnabled/False will automatically restore it's state if set to IsEnabled/True  -->
            <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                <Setter Property="BackgroundColor" Value="{DynamicResource CustomButtonPrimaryStyle.BackgroundColor.Disabled}" />
                <Setter Property="BorderColor" Value="{DynamicResource CustomButtonPrimaryStyle.BorderColor.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  CustomButton Secondary Style  -->
    <Style
        x:Key="CustomButtonSecondaryStyle"
        BasedOn="{StaticResource CustomButtonStyle}"
        TargetType="controls:CustomButton">
        <Setter Property="TextColor" Value="{DynamicResource CustomButtonSecondaryStyle.TextColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource CustomButtonSecondaryStyle.BackgroundColor.Enabled}" />
        <Setter Property="BackgroundColorPressed" Value="{DynamicResource CustomButtonSecondaryStyle.BackgroundColor.Pressed}" />
        <Setter Property="BorderColor" Value="{DynamicResource CustomButtonSecondaryStyle.BorderColor.Enabled}" />
        <Setter Property="BorderColorPressed" Value="{DynamicResource CustomButtonSecondaryStyle.BorderColor.Pressed}" />
        <Style.Triggers>
            <!--  IsEnabled/False will automatically restore it's state if set to IsEnabled/True  -->
            <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                <Setter Property="BackgroundColor" Value="{DynamicResource CustomButtonSecondaryStyle.BackgroundColor.Disabled}" />
                <Setter Property="BorderColor" Value="{DynamicResource CustomButtonSecondaryStyle.BorderColor.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DrilldownButton Style  -->
    <Style
        x:Key="DrilldownButtonStyle"
        BasedOn="{StaticResource CustomButtonStyle}"
        TargetType="controls:CustomButton">
        <Setter Property="TextColor" Value="{DynamicResource DrilldownButtonStyle.TextColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource DrilldownButtonStyle.BackgroundColor.Enabled}" />
        <Setter Property="BackgroundColorPressed" Value="{DynamicResource DrilldownButtonStyle.BackgroundColor.Pressed}" />
        <Setter Property="BorderColor" Value="{DynamicResource DrilldownButtonStyle.BorderColor.Enabled}" />
        <Setter Property="BorderColorPressed" Value="{DynamicResource DrilldownButtonStyle.BorderColor.Pressed}" />
        <Style.Triggers>
            <!--  IsEnabled/False will automatically restore it's state if set to IsEnabled/True  -->
            <Trigger TargetType="Button" Property="IsEnabled" Value="False">
                <Setter Property="BackgroundColor" Value="{DynamicResource DrilldownButtonStyle.BackgroundColor.Disabled}" />
                <Setter Property="BorderColor" Value="{DynamicResource DrilldownButtonStyle.BorderColor.Disabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  LabelStyle  -->
    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Body1}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Body1}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Body1}" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="LineBreakMode" Value="TailTruncation" />
    </Style>

    <Style BasedOn="{StaticResource LabelStyle}" TargetType="Label" />
    <Style BasedOn="{StaticResource LabelStyle}" TargetType="controls:CustomLabel" />

    <Style x:Key="EntryLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Input}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Input}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Input}" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="controls:MinimumHeight.Value" Value="32" />
    </Style>

    <!--  EntryStyle  -->
    <Style x:Key="EntryStyle" TargetType="Entry">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
        <Setter Property="PlaceholderColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Input}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Input}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Input}" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="controls:MinimumHeight.Value" Value="{StaticResource MinimumHeight.Input}" />
    </Style>

    <Style BasedOn="{StaticResource EntryStyle}" TargetType="Entry" />
    <Style BasedOn="{StaticResource EntryStyle}" TargetType="controls:CustomEntry" />

    <!--  Validatable Controls  -->
    <Style TargetType="controls:ValidatableLabel">
        <Setter Property="LabelStyle" Value="{DynamicResource EntryLabelStyle}" />
    </Style>

    <Style TargetType="controls:ValidatableAutoCompleteView">
        <Setter Property="EntryStyle" Value="{DynamicResource EntryStyle}" />
        <Setter Property="SuggestionListStyle">
            <Style TargetType="controls:StackedList">
                <Setter Property="BackgroundColor" Value="Transparent" />
                <Setter Property="Margin">
                    <OnPlatform x:TypeArguments="Thickness">
                        <On Platform="iOS" Value="0" />
                        <On Platform="Android" Value="4,0,4,0" />
                        <On Platform="UWP" Value="0" />
                    </OnPlatform>
                </Setter>
            </Style>
        </Setter>
    </Style>

    <Style TargetType="controls:ValidatableEntry">
        <Setter Property="EntryStyle" Value="{DynamicResource EntryStyle}" />
    </Style>

    <Style TargetType="controls:ValidatableEditor">
        <Setter Property="EditorStyle" Value="{DynamicResource EditorStyle}" />
    </Style>

    <Style TargetType="controls:ValidatablePicker">
        <Setter Property="PickerStyle" Value="{DynamicResource PickerStyle}" />
    </Style>

    <Style TargetType="controls:ValidatableDatePicker">
        <Setter Property="PickerStyle" Value="{DynamicResource PickerStyle}" />
    </Style>

    <Style TargetType="controls:ValidatableDateTimePicker">
        <Setter Property="DatePickerStyle" Value="{DynamicResource PickerStyle}" />
        <Setter Property="TimePickerStyle" Value="{DynamicResource PickerStyle}" />
    </Style>

    <!--  HyperLinkLabelStyle  -->
    <Style x:Key="HyperLinkLabelStyle" TargetType="controls:HyperLinkLabel">
        <Setter Property="TintColor" Value="Blue" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Body1}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Body1}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Body1}" />
    </Style>

    <Style BasedOn="{StaticResource HyperLinkLabelStyle}" TargetType="controls:HyperLinkLabel" />

    <!--  CustomActivityIndicator Default Style  -->
    <Style
        x:Key="CustomActivityIndicatorLabelStyle"
        TargetType="Label"
        BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Title}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Title}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Title}" />
        <Setter Property="VerticalOptions" Value="Start" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
    </Style>
    <Style x:Key="CustomActivityIndicatorStyle" TargetType="controls:CustomActivityIndicator">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="CornerRadius" Value="{DynamicResource Theme.Spacing.Large}" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource Theme.Padding.Large}" />
        <Setter Property="LabelStyle" Value="{StaticResource CustomActivityIndicatorLabelStyle}" />
    </Style>
    <Style TargetType="controls:CustomActivityIndicator" BasedOn="{StaticResource CustomActivityIndicatorStyle}" />

    <!--  ViewModelErrorControl Default Style  -->
    <Style
        x:Key="ViewModelErrorControlLabelStyle"
        TargetType="Label"
        BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Title}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Title}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Title}" />
        <Setter Property="VerticalOptions" Value="Start" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
    </Style>
    <Style x:Key="ViewModelErrorControlStyle" TargetType="controls:ViewModelErrorControl">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource Theme.Padding.Large}" />
        <Setter Property="LabelStyle" Value="{StaticResource ViewModelErrorControlLabelStyle}" />
    </Style>
    <Style TargetType="controls:ViewModelErrorControl" BasedOn="{StaticResource ViewModelErrorControlStyle}" />

    <Style
        x:Key="CustomListItemDetailTextStyle"
        BaseResourceKey="ListItemDetailTextStyle"
        TargetType="Label">
        <Setter Property="FontSize" Value="{DynamicResource ListItemDetailTextStyleSize}" />
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
    </Style>

    <!--<Style TargetType="controls:CustomSwitch">
        <Setter Property="TintColor" Value="{DynamicResource Primary}" />
    </Style>-->

    <Style x:Key="EditorStyle" TargetType="Editor">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Input}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Input}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Input}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="controls:MinimumHeight.Value" Value="{StaticResource MinimumHeight.Input}" />
    </Style>

    <Style BasedOn="{StaticResource EditorStyle}" TargetType="Editor" />
    <Style BasedOn="{StaticResource EditorStyle}" TargetType="controls:CustomEditor" />

    <Style x:Key="PickerStyle" TargetType="Picker">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
        <Setter Property="TitleColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="effects:LineColorEffect.ApplyLineColor" Value="True" />
        <Setter Property="effects:LineColorEffect.LineColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Input}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Input}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Input}" />
        <Setter Property="VerticalOptions" Value="CenterAndExpand" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="controls:MinimumHeight.Value" Value="{StaticResource MinimumHeight.Input}" />
    </Style>

    <Style BasedOn="{StaticResource PickerStyle}" TargetType="Picker" />

    <Style
        x:Key="BindablePickerStyle"
        BasedOn="{StaticResource PickerStyle}"
        TargetType="controls:BindablePicker" />
    <Style BasedOn="{StaticResource BindablePickerStyle}" TargetType="controls:BindablePicker" />

    <Style x:Key="DatePickerStyle" TargetType="DatePicker">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Input}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Input}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Input}" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="effects:LineColorEffect.ApplyLineColor" Value="True" />
        <Setter Property="effects:LineColorEffect.LineColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
        <Setter Property="controls:MinimumHeight.Value" Value="{StaticResource MinimumHeight.Input}" />
    </Style>

    <Style BasedOn="{StaticResource DatePickerStyle}" TargetType="DatePicker" />

    <Style
        x:Key="ExtendedDatePickerStyle"
        BasedOn="{StaticResource DatePickerStyle}"
        TargetType="controls:ExtendedDatePicker">
        <Setter Property="PlaceholderTextColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
    </Style>

    <Style BasedOn="{StaticResource ExtendedDatePickerStyle}" TargetType="controls:ExtendedDatePicker" />

    <Style x:Key="TimePickerStyle" TargetType="TimePicker">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Input}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Input}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Input}" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="effects:LineColorEffect.ApplyLineColor" Value="True" />
        <Setter Property="effects:LineColorEffect.LineColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
        <Setter Property="controls:MinimumHeight.Value" Value="{StaticResource MinimumHeight.Input}" />
    </Style>

    <Style BasedOn="{StaticResource TimePickerStyle}" TargetType="TimePicker" />

    <Style
        x:Key="ExtendedTimePickerStyle"
        BasedOn="{StaticResource TimePickerStyle}"
        TargetType="controls:ExtendedTimePicker">
        <Setter Property="PlaceholderTextColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
    </Style>

    <Style BasedOn="{StaticResource ExtendedTimePickerStyle}" TargetType="controls:ExtendedTimePicker" />

    <Style x:Key="SearchBarStyle" TargetType="SearchBar">
        <Setter Property="PlaceholderColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Input}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Input}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Input}" />
        <Setter Property="controls:MinimumHeight.Value" Value="{StaticResource MinimumHeight.Input}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColor}" />
                            <Setter Property="CancelButtonColor" Value="{DynamicResource Theme.Color.TextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
                            <Setter Property="CancelButtonColor" Value="Transparent" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource SearchBarStyle}" TargetType="SearchBar" />

    <Style
        x:Key="SectionLabelTextStyle"
        TargetType="Label"
        BasedOn="{StaticResource LabelStyle}">
        <Setter Property="TextColor" Value="{DynamicResource CardViewStyle.Header.TextColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource CardViewStyle.Header.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource CardViewStyle.Header.FontSize}" />
        <Setter Property="FontAttributes" Value="{DynamicResource CardViewStyle.Header.FontAttributes}" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
    </Style>

    <Style TargetType="controls:LabelSection">
        <Setter Property="LabelStyle" Value="{DynamicResource SectionLabelTextStyle}" />
    </Style>

    <Style x:Key="ValidationLabelStyle" TargetType="controls:CustomLabel">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.Error}" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Caption}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Caption}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Caption}" />
        <Setter Property="VerticalOptions" Value="StartAndExpand" />
        <Setter Property="HorizontalOptions" Value="StartAndExpand" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="VerticalTextAlignment" Value="Start" />
        <Setter Property="RemovePadding" Value="True" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
    </Style>

    <Style x:Key="AnnotationEntryLabelStyle" TargetType="controls:CustomLabel">
        <Setter Property="TextColor" Value="{DynamicResource Theme.Color.TextColorBright}" />
        <Setter Property="FontFamily" Value="{DynamicResource Theme.FontFamily.Caption}" />
        <Setter Property="FontSize" Value="{DynamicResource Theme.FontSize.Caption}" />
        <Setter Property="FontAttributes" Value="{DynamicResource Theme.FontAttributes.Caption}" />
        <Setter Property="VerticalOptions" Value="StartAndExpand" />
        <Setter Property="HorizontalOptions" Value="StartAndExpand" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="VerticalTextAlignment" Value="End" />
        <Setter Property="RemovePadding" Value="True" />
        <Setter Property="LineBreakMode" Value="TailTruncation" />
    </Style>
</ResourceDictionary>
